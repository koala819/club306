'use client';
import { StyleProvider } from '@ant-design/cssinjs';
// import { Navbar } from '@/components/Navbar';
import { Footer } from '@/components/Footer';
import { LayoutProps } from '@/types/Components';
import './globals.css';
import Providers from '@/components/Providers';
import { useState, useEffect } from 'react';
import { useTheme } from 'next-themes';
import Image from 'next/image';
import picture306 from '../../public/images/logoClub306.png';
import Avp from '../../public/images/Logo_AVP.png';
import Link from 'next/link';
import styles from '../components/Navbar.module.css';
import { signOut, useSession } from 'next-auth/react';
import { checkForStartSession } from '@/lib/supabase';
import { CiMail } from 'react-icons/ci';
import { IoIosContact } from 'react-icons/io';
import { MdEventNote } from 'react-icons/md';
import { FaHouseUser } from 'react-icons/fa';
import { TbCirclesRelation } from 'react-icons/tb';
import { RiLogoutCircleLine } from 'react-icons/ri';
import { HiMoon, HiSun } from 'react-icons/hi';
import { ConfigProvider, Switch } from 'antd';

export default function RootLayout({ children }: LayoutProps) {
  const [isNavOpen, setIsNavOpen] = useState(false);
  const [isLeClubOpen, setLeClubOpen] = useState(false);
  const [isMemberOpen, setMemberOpen] = useState(false);
  // const { data: session } = useSession();
  const [registeredMember, setRegisteredMember] = useState(false);
  const [navbar, setNavbar] = useState(false);
  const { resolvedTheme, setTheme } = useTheme();
  console.log('resolvedTheme', resolvedTheme);
  const [input, setInput] = useState(true);

  // useEffect(() => {
  //   if (session?.user !== undefined) {
  //     if (Object.keys(session?.user).length !== 0) {
  //       checkForStartSession(session).then((response) => {
  //         setRegisteredMember(response);
  //       });
  //     } else {
  //       console.log('we have a standard account with login / pwd');
  //       setRegisteredMember(true);
  //     }
  //   }
  // }, [session]);
  return (
    <html lang="fr" className="dark">
      <body>
        <StyleProvider hashPriority="high">
          <div className=" flex flex-col h-screen">
            <Providers>
              <header>
                <div className="relative dark:bg-blue-500">
                  <nav
                    className="flex px-4 md:shadow-lg items-center
            dark:bg-gray-900 dark:border-gray-700  bg-white"
                    style={{
                      backgroundColor: registeredMember ? '#ADA075' : '#F7F9FF',
                      color: '#3B578E',
                    }}
                  >
                    <div className="justify-between px-4 mx-auto  md:items-center md:flex md:px-8 w-full">
                      <div>
                        <div className="flex items-center justify-between py-3 md:py-5 md:blockw-full  ">
                          <Link href="/">
                            <Image
                              src={picture306}
                              alt="logo club 306"
                              width={240}
                              height={46}
                              className={`mr-3 h-6 sm:h-10 ${
                                navbar ? 'hidden' : 'block'
                              }`}
                              style={{
                                width: '100%',
                                height: 'auto',
                              }}
                            />
                          </Link>
                          <div>
                            <Image
                              src={Avp}
                              alt="logo l'Aventure Peugeot"
                              width={240}
                              height={46}
                              className={
                                'hidden md:block ml-4 h-12 md:h-24 lg:h-24'
                              }
                            />
                          </div>
                          <div className="md:hidden ">
                            <button
                              className="p-2 text-gray-700 rounded-md outline-none focus:border-gray-400 focus:border"
                              onClick={() => {
                                setNavbar(!navbar);
                                setIsNavOpen((prev) => !prev);
                              }}
                            >
                              {!navbar && (
                                <svg
                                  xmlns="http://www.w3.org/2000/svg"
                                  className="w-6 h-6"
                                  fill="none"
                                  viewBox="0 0 24 24"
                                  stroke="currentColor"
                                  strokeWidth={2}
                                >
                                  <path
                                    strokeLinecap="round"
                                    strokeLinejoin="round"
                                    d="M4 6h16M4 12h16M4 18h16"
                                  />
                                </svg>
                              )}
                            </button>
                          </div>
                        </div>
                      </div>
                      <div className=" ">
                        <div
                          className={`flex-1 justify-self-center pb-3 mt-8 md:block md:pb-0 md:mt-0 ${
                            navbar ? 'block' : 'hidden'
                          }`}
                        >
                          {/*SECTION MOBILE*/}
                          <section className="MOBILE-MENU flex center md:hidden ml-auto top-full left-0 right-0 z-50 min-h-[950px]">
                            <div
                              className={
                                isNavOpen ? 'showMenuNav' : 'hideMenuNav'
                              }
                            >
                              {/* CLOSE BUTTON */}
                              <div
                                className="absolute top-0 right-0 px-8 py-8"
                                onClick={() => {
                                  setIsNavOpen(false);
                                  setNavbar(!navbar);
                                }}
                              >
                                <svg
                                  className="h-8 w-8 text-gray-600"
                                  viewBox="0 0 24 24"
                                  fill="none"
                                  stroke="currentColor"
                                  strokeWidth="2"
                                  strokeLinecap="round"
                                  strokeLinejoin="round"
                                >
                                  <line x1="18" y1="6" x2="6" y2="18" />
                                  <line x1="6" y1="6" x2="18" y2="18" />
                                </svg>
                              </div>
                              <ul className="flex flex-col items-center justify-between min-h-[450px] ">
                                <Link
                                  href="/"
                                  onClick={() => {
                                    setIsNavOpen(false);
                                    setNavbar(!navbar);
                                  }}
                                >
                                  <li
                                    className={
                                      registeredMember
                                        ? styles.aMobileRegister
                                        : styles.aMobile
                                    }
                                  >
                                    Accueil
                                  </li>
                                </Link>

                                <li
                                  onClick={() => setLeClubOpen((prev) => !prev)}
                                >
                                  <div
                                    className={
                                      registeredMember
                                        ? styles.aMobileRegister
                                        : styles.aMobile
                                    }
                                  >
                                    <span>le Club</span>
                                    <svg
                                      xmlns="http://www.w3.org/2000/svg"
                                      className={styles.arrow}
                                      viewBox="0 0 24 24"
                                    >
                                      <path d="M0 7.33l2.829-2.83 9.175 9.339 9.167-9.339 2.829 2.83-11.996 12.17z" />
                                    </svg>
                                  </div>
                                  <ul
                                    className={
                                      isLeClubOpen
                                        ? 'showSubMenu'
                                        : 'hideMenuNav'
                                    }
                                  >
                                    <Link
                                      href="/club"
                                      onClick={() => {
                                        setIsNavOpen(false);
                                        setNavbar(!navbar);
                                      }}
                                    >
                                      <li
                                        className={
                                          registeredMember
                                            ? styles.aSubMenuRegister
                                            : styles.aSubMenu
                                        }
                                      >
                                        Présentation
                                      </li>
                                    </Link>
                                    <Link
                                      href="/club/staff"
                                      onClick={() => {
                                        setIsNavOpen(false);
                                        setNavbar(!navbar);
                                      }}
                                    >
                                      <li
                                        className={
                                          registeredMember
                                            ? styles.aSubMenuRegister
                                            : styles.aSubMenu
                                        }
                                      >
                                        le Staff
                                      </li>
                                    </Link>
                                    {/* <li
                          className={
                            registeredMember
                              ? styles.aSubMenuRegister
                              : styles.aSubMenu
                          }
                        >
                          <Link href="/rules">Règlement du Club</Link>
                        </li>
                        <li
                          className={
                            registeredMember
                              ? styles.aSubMenuRegister
                              : styles.aSubMenu
                          }
                        >
                          <Link href="/press">Revue de presse</Link>
                        </li> */}
                                  </ul>
                                </li>

                                {/* <li
                      className={
                        registeredMember
                          ? styles.aMobileRegister
                          : styles.aMobile
                      }
                    >
                      <Link href="/documents">Documents</Link>
                    </li> */}

                                <Link
                                  href="/blog"
                                  onClick={() => {
                                    setIsNavOpen(false);
                                    setNavbar(!navbar);
                                  }}
                                >
                                  <li
                                    className={
                                      registeredMember
                                        ? styles.aMobileRegister
                                        : styles.aMobile
                                    }
                                  >
                                    Blog
                                  </li>
                                </Link>
                                <Link
                                  href="/contact"
                                  onClick={() => {
                                    setIsNavOpen(false);
                                    setNavbar(!navbar);
                                  }}
                                >
                                  <li
                                    className={
                                      registeredMember
                                        ? styles.aMobileRegister
                                        : styles.aMobile
                                    }
                                  >
                                    Contact
                                  </li>
                                </Link>
                                <li
                                  onClick={() => setMemberOpen((prev) => !prev)}
                                >
                                  <div
                                    className={
                                      registeredMember
                                        ? styles.aMobileRegister
                                        : styles.aMobile
                                    }
                                  >
                                    <span>Membres</span>
                                    <svg
                                      xmlns="http://www.w3.org/2000/svg"
                                      className={styles.arrow}
                                      viewBox="0 0 24 24"
                                    >
                                      <path d="M0 7.33l2.829-2.83 9.175 9.339 9.167-9.339 2.829 2.83-11.996 12.17z" />
                                    </svg>
                                  </div>
                                  <ul
                                    className={
                                      isMemberOpen
                                        ? 'showSubMenu'
                                        : 'hideMenuNav'
                                    }
                                  >
                                    {registeredMember ? (
                                      <>
                                        <li className={styles.aSubMenuRegister}>
                                          <Link
                                            href="/idg"
                                            onClick={() => {
                                              setIsNavOpen(false);
                                              setNavbar(!navbar);
                                            }}
                                          >
                                            <FaHouseUser size={26} />
                                            Mon Compte
                                          </Link>
                                        </li>
                                        <Link
                                          href="/event"
                                          onClick={() => {
                                            setIsNavOpen(false);
                                            setNavbar(!navbar);
                                          }}
                                        >
                                          <li
                                            className={`flex justify-between  ${styles.aSubMenuRegister}`}
                                          >
                                            <MdEventNote size={26} />
                                            Saison 2023
                                          </li>
                                        </Link>
                                        <li className={styles.aSubMenuRegister}>
                                          <Link
                                            href="/partners"
                                            onClick={() => {
                                              setIsNavOpen(false);
                                              setNavbar(!navbar);
                                            }}
                                          >
                                            <TbCirclesRelation size={26} />
                                            Nos Partenaires
                                          </Link>
                                        </li>
                                        <li
                                          className={styles.aSubMenuRegister}
                                          onClick={() => _handleGoogleSignout()}
                                        >
                                          <RiLogoutCircleLine size={26} />
                                          Se Déconnecter
                                        </li>
                                      </>
                                    ) : (
                                      <>
                                        <Link
                                          href="/login"
                                          onClick={() => {
                                            setIsNavOpen(false);
                                            setNavbar(!navbar);
                                          }}
                                        >
                                          <li className={styles.aSubMenu}>
                                            Se Connecter
                                          </li>
                                        </Link>
                                        <li className={styles.aSubMenu}>
                                          <Link
                                            href="/membership"
                                            onClick={() => {
                                              setIsNavOpen(false);
                                              setNavbar(!navbar);
                                            }}
                                          >
                                            Adhérer
                                          </Link>
                                        </li>
                                      </>
                                    )}
                                  </ul>
                                </li>

                                {/* {registeredMember && (
                      <li onClick={() => setTutorialOpen((prev) => !prev)}>
                        <div className={styles.aMobileRegister}>
                          <span>Tutoriels</span>
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            className={styles.arrow}
                            viewBox="0 0 24 24"
                          >
                            <path d="M0 7.33l2.829-2.83 9.175 9.339 9.167-9.339 2.829 2.83-11.996 12.17z" />
                          </svg>
                        </div>
                        <ul
                          className={
                            isTuturialOpen ? 'showSubMenu' : 'hideMenuNav'
                          }
                        >
                          <li
                            className={
                              registeredMember
                                ? styles.aSubMenuRegister
                                : styles.aSubMenu
                            }
                          >
                            <Link href="mecanique">Mécanique</Link>
                          </li>
                          <li
                            className={
                              registeredMember
                                ? styles.aSubMenuRegister
                                : styles.aSubMenu
                            }
                          >
                            <Link href="electrique">Electrique</Link>
                          </li>
                          <li
                            className={
                              registeredMember
                                ? styles.aSubMenuRegister
                                : styles.aSubMenu
                            }
                          >
                            <Link href="moteur">Moteur</Link>
                          </li>
                        </ul>
                      </li>
                    )} */}
                              </ul>
                            </div>
                          </section>

                          {/*SECTION NORMALE*/}
                          <ul className="md:px-2 ml-auto md:flex md:space-x-2 absolute md:relative top-full left-0 right-0 hidden space-x-8 z-50">
                            <Link href="/">
                              <li
                                className={
                                  registeredMember
                                    ? styles.aNormalRegister
                                    : styles.aNormal
                                }
                              >
                                Accueil
                              </li>
                            </Link>
                            <li className="relative parent">
                              <div
                                className={
                                  registeredMember
                                    ? styles.aNormalRegister
                                    : styles.aNormal
                                }
                              >
                                <span>le Club</span>
                                <svg
                                  xmlns="http://www.w3.org/2000/svg"
                                  className={styles.arrow}
                                  viewBox="0 0 24 24"
                                >
                                  <path d="M0 7.33l2.829-2.83 9.175 9.339 9.167-9.339 2.829 2.83-11.996 12.17z" />
                                </svg>
                              </div>
                              <ul
                                className={` ${
                                  registeredMember
                                    ? 'bg-[#ADA075] rounded-xl border-[#6E654B] border-2'
                                    : 'bg-[#d1d9f1bb] rounded-none'
                                } child transition duration-300 md:absolute top-full right-0 md:w-48 md:shadow-lg `}
                              >
                                <Link href="/club">
                                  <li
                                    className={
                                      registeredMember
                                        ? styles.aNormalRegister
                                        : styles.aNormal
                                    }
                                  >
                                    Présentation
                                  </li>
                                </Link>
                                <Link href="/club/staff">
                                  <li
                                    className={
                                      registeredMember
                                        ? styles.aNormalRegister
                                        : styles.aNormal
                                    }
                                  >
                                    le Staff
                                  </li>
                                </Link>
                                {/* <li
                      className={
                        registeredMember
                          ? styles.aNormalRegister
                          : styles.aNormal
                      }
                    >
                      <Link href="/rules">Règlement du Club</Link>
                    </li>
                    <li
                      className={
                        registeredMember
                          ? styles.aNormalRegister
                          : styles.aNormal
                      }
                    >
                      <Link href="/press">Revue de presse</Link>
                    </li> */}
                              </ul>
                            </li>
                            {/* <li
                  className={
                    registeredMember ? styles.aNormalRegister : styles.aNormal
                  }
                >
                  <Link href="/documents">Documents</Link>
                </li> */}

                            {/* {registeredMember && (
                  <li className="relative parent">
                    <div className={styles.aNormalRegister}>
                      <span>Tutoriels</span>
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        className={styles.arrow}
                        viewBox="0 0 24 24"
                      >
                        <path d="M0 7.33l2.829-2.83 9.175 9.339 9.167-9.339 2.829 2.83-11.996 12.17z" />
                      </svg>
                    </div>
                    <ul className="bg-[#f5f5dca2] child transition duration-300 md:absolute top-full right-0 md:w-48 md:shadow-lg rounded-3xl">
                      <li className={styles.aNormalRegister}>
                        <Link href="/mecanique">Mécanique</Link>
                      </li>
                      <li className={styles.aNormalRegister}>
                        <Link href="/electrique">Electrique</Link>
                      </li>
                      <li className={styles.aNormalRegister}>
                        <Link href="/moteur">Moteur</Link>
                      </li>
                    </ul>
                  </li>
                )} */}

                            <Link href="/blog">
                              <li
                                className={
                                  registeredMember
                                    ? styles.aNormalRegister
                                    : styles.aNormal
                                }
                              >
                                Blog
                              </li>
                            </Link>

                            <Link href="/contact">
                              <li
                                className={
                                  registeredMember
                                    ? styles.aNormalRegister
                                    : styles.aNormal
                                }
                              >
                                <CiMail size={26} className="" />
                              </li>
                            </Link>

                            <li className="relative parent">
                              <div
                                className={
                                  registeredMember
                                    ? styles.aNormalRegister
                                    : styles.aNormal
                                }
                              >
                                <IoIosContact size={26} className="" />

                                <svg
                                  xmlns="http://www.w3.org/2000/svg"
                                  className={styles.arrow}
                                  viewBox="0 0 24 24"
                                >
                                  <path d="M0 7.33l2.829-2.83 9.175 9.339 9.167-9.339 2.829 2.83-11.996 12.17z" />
                                </svg>
                              </div>
                              {/* <ul className="bg-[#f5f5dca2] child transition duration-300 md:absolute top-full right-0 md:w-48 md:shadow-lg rounded-3xl"> */}
                              <ul
                                className={`${
                                  registeredMember
                                    ? 'bg-[#ADA075] rounded-xl border-[#6E654B] border-2'
                                    : 'bg-[#d1d9f1bb]  rounded-none'
                                } child transition duration-300 md:absolute top-full right-0 md:w-48 md:shadow-lg `}
                              >
                                {registeredMember ? (
                                  <>
                                    <Link href="/idg">
                                      <li
                                        className={`flex justify-between  ${styles.aNormalRegister}`}
                                      >
                                        <FaHouseUser size={26} />
                                        Mon Compte
                                      </li>
                                    </Link>
                                    <Link href="/event">
                                      <li
                                        className={`flex justify-between  ${styles.aNormalRegister}`}
                                      >
                                        <MdEventNote size={26} />
                                        Saison 2023
                                      </li>
                                    </Link>
                                    <Link href="/partners">
                                      <li
                                        className={`flex justify-between  ${styles.aNormalRegister}`}
                                      >
                                        <TbCirclesRelation size={26} />
                                        Nos Partenaires
                                      </li>
                                    </Link>
                                    <li
                                      className={`flex justify-between  ${styles.aNormalRegister}`}
                                      onClick={() => _handleGoogleSignout()}
                                    >
                                      <RiLogoutCircleLine size={26} />
                                      Se Déconnecter
                                    </li>
                                  </>
                                ) : (
                                  <>
                                    <Link href="/login">
                                      <li className={styles.aNormal}>
                                        Se Connecter
                                      </li>
                                    </Link>
                                    <Link href="/membership">
                                      <li className={styles.aNormal}>
                                        Adhérer
                                      </li>
                                    </Link>
                                  </>
                                )}
                              </ul>
                            </li>
                            {/* <li className="relative parent">
                  <button
                    onClick={() =>
                      setTheme(resolvedTheme === 'dark' ? 'light' : 'dark')
                    }
                  >
                    {resolvedTheme === 'dark' ? (
                      <HiMoon size={26} className="h-5 w-5 text-orange-300" />
                    ) : (
                      <HiSun size={26} className="h-5 w-5 text-slate-800" />
                    )}
                  </button>
                </li> */}
                            <li className="flex text-center no-decoration p-4">
                              <div className="flex space-x-2">
                                <HiSun size={26} className=" text-slate-800" />
                                <ConfigProvider
                                  theme={{
                                    token: {
                                      colorPrimary: 'bg-green-300',
                                    },
                                  }}
                                >
                                  <Switch
                                    checked={input}
                                    // checkedChildren="Dark"
                                    // unCheckedChildren="Light"

                                    onClick={() =>
                                      setTheme(
                                        resolvedTheme === 'dark'
                                          ? 'light'
                                          : 'dark'
                                      )
                                    }
                                    onChange={() => {
                                      setInput(!input);
                                    }}
                                  />
                                </ConfigProvider>

                                <HiMoon size={26} className="text-orange-300" />
                              </div>
                            </li>
                          </ul>
                        </div>
                      </div>
                    </div>
                  </nav>
                </div>
              </header>
              <main className="flex-1 ">{children}</main>
              <Footer />
            </Providers>
          </div>
        </StyleProvider>
      </body>
    </html>
  );
}

async function _handleGoogleSignout() {
  await signOut({
    callbackUrl: `${process.env.CLIENT_URL}` || `${process.env.CLIENT_URL2}`,
  });
}
